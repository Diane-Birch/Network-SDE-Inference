{\rtf1\ansi\ansicpg936\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Oblique;\f1\fswiss\fcharset0 Helvetica;\f2\fswiss\fcharset0 Helvetica-Bold;
\f3\fnil\fcharset0 Menlo-Italic;\f4\fnil\fcharset0 Tahoma;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red37\green108\blue235;\red0\green0\blue0;
\red250\green249\blue252;\red38\green37\blue42;}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c100000;\cssrgb\c18039\c51765\c93725;\cssrgb\c0\c0\c0;
\cssrgb\c98431\c98039\c99216;\cssrgb\c20000\c19608\c21961;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10700\viewh14060\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\i\fs24 \cf0 Authors: Ting-Ting Gao, Baruch Barzel, and Gang Yan*\

\f1\i0 \

\f2\b\fs28 GNN-based Stochastic Network Dynamics Inference Framework
\fs24 \

\f1\b0 This repository contains a GNN-based framework for inferring stochastic network dynamics, as well as several examples showcasing its usage. 
\f2\b \
\

\fs28 Example: Fig1_Lorenz_unweighted
\fs24 \

\f1\b0 To get started, we recommend checking out the
\f0\i  
\f3 Fig1_Lorenz_unweighted
\f1\i0  example. This example demonstrates how to use the framework to infer the dynamics of an unweighted network based on the Lorenz system. The data for all examples can be found in the Data directory, and the inference and plotting code can be found in the corresponding files (\'93Figure1\'94).
\f2\b \
\

\fs28 Usage
\fs24 \

\f1\b0 To use the framework on your own data, simply modify the input data format to match the examples provided. The framework is designed to work with both weighted and unweighted networks, and can handle a variety of different network topologies. The inference and plotting code can be found in the corresponding files.\
\
Please contact Ting-Ting Gao (ttinggao314@gmail.com) or Gang Yan for HR systems\'92 datasets.
\f2\b \
\

\fs28 Requirements
\fs24 \

\f1\b0 This framework requires Python 3.8 or higher, as well as several common scientific computing libraries, as shown in below. These libraries can be installed using pip or conda:\
matplotlib                3.5.1\
numpy                     1.22.0\
pandas                    1.4.1\
scikit-learn              1.1.2\
scipy                     1.7.3            \
scs                       3.2.0               \
seaborn                   0.11.2  \
torchvision               0.11.3\
pytorch                   1.10.2          \
pytorch-cluster           1.5.9      \
pytorch-scatter           2.0.9          \
pytorch-sparse            0.6.12          \
pytorch-spline-conv       1.2.1  
\f2\b \
\
Citation\

\f1\b0 If you use this framework in your research, please cite our paper.\
\

\f2\b Troubleshooting
\f4\b0\fs57\fsmilli28800 \cb2 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sa260\partightenfactor0

\f1\fs24 \cf0 *If you would like to use the code in your research and have any questions, you can reach out to us via email\'a0{\field{\*\fldinst{HYPERLINK "mailto:eegyan@gmail.com"}}{\fldrslt \cf3 \ul \ulc3 eegyan@gmail.com}}.\
Thanks to helpful discussions with Dr. Miles Cranmer on Github platform and Dr. \cf4 \cb5 Felix Dietrich with email.
\f4\fs26 \cf0 \cb2 \
}